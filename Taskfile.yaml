---
version: 3
includes:
  git:
    taskfile: https://raw.githubusercontent.com/stuttgart-things/platform-engineering-showcase/refs/heads/main/taskfiles/git.yaml

dotenv: ['.env', '{{.HOME}}/.env']

tasks:
  test-all:
    desc: Run all tests
    deps: [check]
    cmds:
      - task: test-vmtemplate
      - task: test-vm
      - task: test-go-microservice
      - task: test-repository-linting

  test-repository-linting:
    desc: Test repository-linting module
    cmds:
      - |
        dagger call -m {{ .MODULE }} {{ .FUNCTION }} \
        --src {{ .CODE_TEST_DIR }} \
        export --path={{ .EXPORT_PATH }}
    vars:
      MODULE: repository-linting
      FUNCTION: validate-multiple-technologies
      CODE_TEST_DIR: tests/repository-linting/test-repo
      EXPORT_PATH: /tmp/all-findings.txt

  test-go-microservice:
    desc: Test go-microservice module
    cmds:
      - |
        dagger call -m {{ .MODULE }} {{ .FUNCTION }} \
        --src {{ .CODE_TEST_DIR }} \
        --lintCanFail=true \
        --progress plain -vv \
        export --path=/tmp/report.json
    vars:
      MODULE: go-microservice
      FUNCTION: run-static-stage
      CODE_TEST_DIR: tests/{{ .MODULE }}/calculator

  test-vmtemplate:
    desc: Test vmtemplate module
    cmds:
      - |
        dagger call -m {{ .MODULE }} {{ .FUNCTION }} \
        --packer-config-dir {{ .CODE_TEST_DIR }} \
        --packer-config {{ .TEST_CONFIG }} \
        --packer-version {{ .PACKER_VERSION }} \
        --progress plain -vv
    vars:
      MODULE: vmtemplate
      FUNCTION: bake
      CODE_TEST_DIR: tests/{{ .MODULE }}/hello
      TEST_CONFIG: hello.pkr.hcl
      PACKER_VERSION: 1.13.1

  test-vm:
    desc: Test vm module
    cmds:
      - |
        echo "Running bake command for vm module - apply terraform code"
        rm -rf {{ .EXPORTED_TF_WORKSPACE }} || true
      - |
        mkdir -p {{ .EXPORTED_TF_WORKSPACE }} || true
      - |
        dagger call -m {{ .MODULE }} {{ .FUNCTION }} \
        --terraform-dir {{ .TF_CODE_TEST_DIR }} \
        --encrypted-file {{ .SOPS_ENCRYPTED_VARS }} \
        --operation apply \
        --sops-key={{ .SOPS_KEY }} \
        -vv --progress plain \
        export --path={{ .EXPORTED_TF_WORKSPACE }}
      - |
        echo "Running bake command for vm module - apply terraform code over existing workspace"
        dagger call -m {{ .MODULE }} {{ .FUNCTION }} \
        --terraform-dir {{ .EXPORTED_TF_WORKSPACE }} \
        --encrypted-file {{ .SOPS_ENCRYPTED_VARS }} \
        --operation apply \
        --sops-key={{ .SOPS_KEY }} \
        -vv --progress plain \
        export --path={{ .EXPORTED_TF_WORKSPACE }}
    vars:
      MODULE: vm
      FUNCTION: bake-local
      TF_CODE_TEST_DIR: tests/{{ .MODULE }}/tf
      SOPS_ENCRYPTED_VARS: tests/{{ .MODULE }}/terraform.tfvars.enc.json
      EXPORTED_TF_WORKSPACE: /tmp/terraform/vms/dagger/
      SOPS_KEY: env:SOPS_AGE_KEY

  create:
    desc: Create new dagger module
    cmds:
      - dagger init --sdk={{ .SDK }} --source=./{{ .MODULE_NAME }} --name={{ .MODULE_NAME }}
      - jq '.source = "."' dagger.json > tmp.json && mv tmp.json dagger.json
      - mv dagger.json ./{{ .MODULE_NAME }}/dagger.json
    vars:
      MODULE_NAME:
        sh: gum input --placeholder "Module name"
      SDK:
        sh: gum choose "go" "python"

  check:
    desc: "Run pre-commit hooks"
    cmds:
      - pre-commit run -a

  release:
    desc: release new version
    cmds:
      - task: git:pr
      - npx semantic-release --dry-run
      - npx semantic-release --debug --no-ci
      - echo released version $(git describe --tags --abbrev=0)

  do:
    desc: Select a task to run
    cmds:
      - |
        task=$(yq e '.tasks | keys' Taskfile.yaml | sed 's/^- //' | gum choose)
        task ${task}
